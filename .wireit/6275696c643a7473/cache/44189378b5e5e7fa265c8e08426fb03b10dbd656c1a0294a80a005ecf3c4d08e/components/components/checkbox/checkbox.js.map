{"version":3,"file":"checkbox.js","sourceRoot":"","sources":["../../../src/components/checkbox/checkbox.ts"],"names":[],"mappings":"AAAA;;;;GAIG;AACH,OAAO,EAAC,YAAY,EAAC,MAAM,mBAAmB,CAAC;AAC/C,OAAO,EAAC,MAAM,EAAC,MAAM,0BAA0B,CAAC;AAEhD;;;;;;;;;;;;;;;;;;;GAmBG;AACH,MAAM,OAAO,QAAS,SAAQ,YAAY;;AACxB,eAAM,GAAG,CAAC,MAAM,CAAC,CAAC;AAGpC,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,aAAa,CAAC,EAAE;IACtC,cAAc,CAAC,MAAM,CAAC,aAAa,EAAE,QAAQ,CAAC,CAAC;CAChD","sourcesContent":["/**\n * @license\n * Copyright 2022 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nimport {CheckboxImpl} from './lib/checkbox.js';\nimport {styles} from './lib/checkbox.styles.js';\n\n/**\n * A custom Checkbox component.\n *\n * @cssprop {Length} [--my-checkbox-padding=2px] - Internal padding of the checkbox.\n * @cssprop {Length} [--my-checkbox-border-width=2px] - Width of the checkbox's border.\n * @cssprop {Length} [--my-checkbox-border-radius=4px] - Border radius of the checkbox's border.\n * @cssprop {Color} [--my-checkbox-color=var(--my-primary-color)] - Color of the checkbox fill when selected.\n * @cssprop {Color} [--my-checkbox-color-disabled=var(--my-disabled-color)]] - Color of the checkbox fill when disabled.\n * @cssprop {Color} [--my-checkbox-icon-color=var(--my-on-primary-color)] - Color of the checkbox icon.\n * @cssprop {Color} [--my-checkbox-border-color=var(--my-disabled-color)] - Color of the checkbox border.\n * @cssprop {Color} [--my-checkbox-border-color-disabled=var(--my-disabled-color)] - Color of the checkbox border when disabled.\n * @cssprop {Scalar} [--my-checkbox-ripple-opacity-disabled=var(--my-state-opacity-disabled)] - Opacity of the ripple when disabled.\n * @cssprop {Scalar} [--my-checkbox-ripple-opacity-hover=var(--my-state-opacity-hover)] - Opacity of the ripple when hovered.\n * @cssprop {Scalar} [--my-checkbox-ripple-opacity-focus=var(--my-state-opacity-focus)] - Opacity of the ripple when focused.\n * @cssprop {Scalar} [--my-checkbox-ripple-opacity-press=var(--my-state-opacity-press)] - Opacity of the ripple when press.\n *\n * @csspart input - The native input element.\n * @csspart square - The square that is filled in when checked.\n * @csspart ripple - The the activity ripple.\n */\nexport class Checkbox extends CheckboxImpl {\n  static override styles = [styles];\n}\n\nif (!customElements.get('my-checkbox')) {\n  customElements.define('my-checkbox', Checkbox);\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'my-checkbox': Checkbox;\n  }\n}\n"]}