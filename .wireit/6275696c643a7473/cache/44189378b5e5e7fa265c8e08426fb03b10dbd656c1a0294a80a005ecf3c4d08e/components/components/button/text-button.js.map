{"version":3,"file":"text-button.js","sourceRoot":"","sources":["../../../src/components/button/text-button.ts"],"names":[],"mappings":"AAAA;;;;GAIG;AAEH,OAAO,EAAC,MAAM,EAAC,MAAM,iBAAiB,CAAC;AACvC,OAAO,EAAC,MAAM,IAAI,YAAY,EAAC,MAAM,+BAA+B,CAAC;AACrE,OAAO,EAAC,MAAM,EAAC,MAAM,6BAA6B,CAAC;AAEnD;;;;;;;;;;;;;;;;;;;;;GAqBG;AACH,MAAM,OAAO,UAAW,SAAQ,MAAM;;AACpB,iBAAM,GAAG,CAAC,YAAY,EAAE,MAAM,CAAC,CAAC;AAGlD,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,gBAAgB,CAAC,EAAE;IACzC,cAAc,CAAC,MAAM,CAAC,gBAAgB,EAAE,UAAU,CAAC,CAAC;CACrD","sourcesContent":["/**\n * @license\n * Copyright 2022 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {Button} from './lib/button.js';\nimport {styles as sharedStyles} from './lib/button-shared.styles.js';\nimport {styles} from './lib/text-button.styles.js';\n\n/**\n * A button that that looks like text and is filled when clicked.\n *\n * @cssprop {Length} [--my-button-horizontal-padding=24px] - The horizontal padding of the button.\n * @cssprop {Length} [--my-button-horizontal-icon-padding=8px] - The padding between the icon and the label.\n * @cssprop {Scalar} [--my-button-ripple-opacity-hover=var(--my-theme-state-opacity-hover)] - The opacity of the ripple on hover.\n * @cssprop {Scalar} [--my-button-ripple-opacity-focus=var(--my-theme-state-opacity-focus] - The opacity of the ripple on focus.\n * @cssprop {Scalar} [--my-button-ripple-opacity-press=var(--my-theme-state-opacity-press)] - the opacity of the ripple on press.\n * @cssprop {FontFamily} [--my-button-font-family=sans-serif] - The font family of the button label.\n * @cssprop {Scalar} [--my-button-font-weight=500] - The font-weight of the button label.\n * @cssprop {Length} [--my-button-font-size=0.875rem] - The font-size of the button label.\n * @cssprop {Color} [--my-button-text-color=var(--my-theme-primary-color)] - The text color of the button.\n * @cssprop {Color} [--my-button-text-color-disabled=var(--my-theme-on-disabled-color)] - The text color of the button when disabled.\n * @cssprop {Color} [--my-button-text-background-color=transparent] - The background color of the button.\n * @cssprop {Color} [--my-button-text-background-color-disabled=transparent] - The background color of the button when disabled.\n *\n * @csspart button - The native button element.\n * @csspart label - The text label of the button.\n * @csspart touch-target - The touch target of the button.\n *\n * @slot icon - The icon to display in the button (make sure to set `hasIcon` to true).\n */\nexport class TextButton extends Button {\n  static override styles = [sharedStyles, styles];\n}\n\nif (!customElements.get('my-text-button')) {\n  customElements.define('my-text-button', TextButton);\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'my-text-button': TextButton;\n  }\n}\n"]}