{"version":3,"file":"toggle-button.js","sourceRoot":"","sources":["../../../src/components/button/toggle-button.ts"],"names":[],"mappings":"AAAA;;;;GAIG;AAEH,OAAO,EAAC,gBAAgB,EAAC,MAAM,wBAAwB,CAAC;AACxD,OAAO,EAAC,MAAM,IAAI,YAAY,EAAC,MAAM,+BAA+B,CAAC;AACrE,OAAO,EAAC,MAAM,IAAI,eAAe,EAAC,MAAM,kCAAkC,CAAC;AAC3E,OAAO,EAAC,MAAM,IAAI,kBAAkB,EAAC,MAAM,+BAA+B,CAAC;AAC3E,OAAO,EAAC,MAAM,EAAC,MAAM,+BAA+B,CAAC;AAErD;;;;;;;;;;;;;;;;;;;;;;;GAuBG;AACH,MAAM,OAAO,YAAa,SAAQ,gBAAgB;;AAChC,mBAAM,GAAG;IACvB,YAAY;IACZ,eAAe;IACf,kBAAkB;IAClB,MAAM;CACP,CAAC;AAGJ,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,kBAAkB,CAAC,EAAE;IAC3C,cAAc,CAAC,MAAM,CAAC,kBAAkB,EAAE,YAAY,CAAC,CAAC;CACzD","sourcesContent":["/**\n * @license\n * Copyright 2022 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {ToggleButtonImpl} from './lib/toggle-button.js';\nimport {styles as sharedStyles} from './lib/button-shared.styles.js';\nimport {styles as elevationStyles} from './lib/button-elevation.styles.js';\nimport {styles as filledButtonStyles} from './lib/filled-button.styles.js';\nimport {styles} from './lib/toggle-button.styles.js';\n\n/**\n * An elevated button that is filled with a color but can toggle between two\n * icons.\n *\n * @cssprop {Length} [--my-button-horizontal-padding=24px] - The horizontal padding of the button.\n * @cssprop {Length} [--my-button-horizontal-icon-padding=8px] - The padding between the icon and the label.\n * @cssprop {Scalar} [--my-button-ripple-opacity-hover=var(--my-theme-state-opacity-hover)] - The opacity of the ripple on hover.\n * @cssprop {Scalar} [--my-button-ripple-opacity-focus=var(--my-theme-state-opacity-focus] - The opacity of the ripple on focus.\n * @cssprop {Scalar} [--my-button-ripple-opacity-press=var(--my-theme-state-opacity-press)] - the opacity of the ripple on press.\n * @cssprop {FontFamily} [--my-button-font-family=sans-serif] - The font family of the button label.\n * @cssprop {Scalar} [--my-button-font-weight=500] - The font-weight of the button label.\n * @cssprop {Length} [--my-button-font-size=0.875rem] - The font-size of the button label.\n * @cssprop {Color} [--my-button-filled-color=var(--my-theme-on-primary-color)] - The text color of the button.\n * @cssprop {Color} [--my-button-filled-color-disabled=var(--my-theme-on-disabled-color)] - The text color of the button when disabled.\n * @cssprop {Color} [--my-button-filled-background-color=var(--my-theme-primary-color)] - The background color of the button.\n * @cssprop {Color} [--my-button-filled-background-color-disabled=var(--my-theme-disabled-color)] - The background color of the button when disabled.\n *\n * @csspart button - The native button element.\n * @csspart label - The text label of the button.\n * @csspart touch-target - The touch target of the button.\n *\n * @slot off - The icon to display when the button is in the 'off' state (default).\n * @slot on - The icon to display when the button is in the 'on' state.\n */\nexport class ToggleButton extends ToggleButtonImpl {\n  static override styles = [\n    sharedStyles,\n    elevationStyles,\n    filledButtonStyles,\n    styles,\n  ];\n}\n\nif (!customElements.get('my-toggle-button')) {\n  customElements.define('my-toggle-button', ToggleButton);\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'my-toggle-button': ToggleButton;\n  }\n}\n"]}