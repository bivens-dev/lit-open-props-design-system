{"version":3,"file":"checkbox.test.js","sourceRoot":"","sources":["../../../../src/components/checkbox/test/checkbox.test.ts"],"names":[],"mappings":"AAAA;;;;GAIG;AAEH,OAAO,EAAC,QAAQ,EAAC,MAAM,gBAAgB,CAAC;AAExC,OAAO,EAAC,OAAO,EAAE,MAAM,EAAC,MAAM,kBAAkB,CAAC;AACjD,OAAO,EAAC,IAAI,EAAC,MAAM,oBAAoB,CAAC;AAExC,KAAK,CAAC,aAAa,EAAE,GAAG,EAAE;IACxB,IAAI,CAAC,YAAY,EAAE,GAAG,EAAE;QACtB,MAAM,EAAE,GAAG,QAAQ,CAAC,aAAa,CAAC,aAAa,CAAC,CAAC;QACjD,MAAM,CAAC,UAAU,CAAC,EAAE,EAAE,QAAQ,CAAC,CAAC;IAClC,CAAC,CAAC,CAAC;IAEH,IAAI,CAAC,6BAA6B,EAAE,KAAK,IAAI,EAAE;QAC7C,MAAM,EAAE,GAAG,MAAM,OAAO,CAAC,IAAI,CAAA,6BAA6B,CAAC,CAAC;QAC5D,MAAM,CAAC,SAAS,CAAC,KAAK,CACpB,EAAE,EACF;;;;QAIE,CACH,CAAC;IACJ,CAAC,CAAC,CAAC;IAEH,IAAI,CAAC,yBAAyB,EAAE,KAAK,IAAI,EAAE;QACzC,MAAM,EAAE,GAAG,MAAM,OAAO,CAAC,IAAI,CAAA,yCAAyC,CAAC,CAAC;QACxE,MAAM,CAAC,SAAS,CAAC,KAAK,CACpB,EAAE,EACF;;;;QAIE,CACH,CAAC;IACJ,CAAC,CAAC,CAAC;IAEH,IAAI,CAAC,iBAAiB,EAAE,KAAK,IAAI,EAAE;QACjC,MAAM,EAAE,GAAG,CAAC,MAAM,OAAO,CAAC,IAAI,CAAA,6BAA6B,CAAC,CAAa,CAAC;QAC1E,MAAM,MAAM,GAAG,EAAE,CAAC,UAAW,CAAC,aAAa,CAAC,QAAQ,CAAE,CAAC;QACvD,MAAM,CAAC,KAAK,EAAE,CAAC;QACf,MAAM,EAAE,CAAC,cAAc,CAAC;QACxB,MAAM,CAAC,SAAS,CAAC,KAAK,CACpB,EAAE,EACF;;;;QAIE,CACH,CAAC;IACJ,CAAC,CAAC,CAAC;IAEH,IAAI,CAAC,iBAAiB,EAAE,KAAK,IAAI,EAAE;QACjC,MAAM,EAAE,GAAG,CAAC,MAAM,OAAO,CAAC,IAAI,CAAA,6BAA6B,CAAC,CAAa,CAAC;QAC1E,MAAM,EAAE,CAAC,cAAc,CAAC;QACxB,MAAM,CAAC,KAAK,CAAC,gBAAgB,CAAC,EAAE,CAAC,CAAC,UAAU,EAAE,MAAM,CAAC,CAAC;IACxD,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {Checkbox} from '../checkbox.js';\n\nimport {fixture, assert} from '@open-wc/testing';\nimport {html} from 'lit/static-html.js';\n\nsuite('my-checkbox', () => {\n  test('is defined', () => {\n    const el = document.createElement('my-checkbox');\n    assert.instanceOf(el, Checkbox);\n  });\n\n  test('renders with default values', async () => {\n    const el = await fixture(html`<my-checkbox></my-checkbox>`);\n    assert.shadowDom.equal(\n      el,\n      `\n         <h1>Hello, World!</h1>\n         <button part=\"button\">Click Count: 0</button>\n         <slot></slot>\n       `\n    );\n  });\n\n  test('renders with a set name', async () => {\n    const el = await fixture(html`<my-checkbox name=\"Test\"></my-checkbox>`);\n    assert.shadowDom.equal(\n      el,\n      `\n         <h1>Hello, Test!</h1>\n         <button part=\"button\">Click Count: 0</button>\n         <slot></slot>\n       `\n    );\n  });\n\n  test('handles a click', async () => {\n    const el = (await fixture(html`<my-checkbox></my-checkbox>`)) as Checkbox;\n    const button = el.shadowRoot!.querySelector('button')!;\n    button.click();\n    await el.updateComplete;\n    assert.shadowDom.equal(\n      el,\n      `\n         <h1>Hello, World!</h1>\n         <button part=\"button\">Click Count: 1</button>\n         <slot></slot>\n       `\n    );\n  });\n\n  test('styling applied', async () => {\n    const el = (await fixture(html`<my-checkbox></my-checkbox>`)) as Checkbox;\n    await el.updateComplete;\n    assert.equal(getComputedStyle(el).paddingTop, '16px');\n  });\n});\n"]}